{
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 100
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff"
    },
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[terraform]": {
        "editor.stickyScroll.enabled": true
    },
    "[typescript]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "never"
        },
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "chat.agent.enabled": false,
    "chat.commandCenter.enabled": false,
    "chat.extensionTools.enabled": false,
    "cSpell.enabledNotifications": {
        "Average Word Length too Long": false,
        "Lines too Long": false,
        "Maximum Word Length Exceeded": false
    },
    "cSpell.language": "en-GB",
    "cSpell.userWords": ["Syntavian"],
    "debug.javascript.autoAttachFilter": "disabled",
    "diffEditor.codeLens": true,
    "diffEditor.experimental.showMoves": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "docker.extension.enableComposeLanguageServer": false,
    "editor.autoClosingBrackets": "beforeWhitespace",
    "editor.autoClosingComments": "beforeWhitespace",
    "editor.autoClosingDelete": "auto",
    "editor.autoClosingQuotes": "beforeWhitespace",
    "editor.autoIndent": "full",
    "editor.autoIndentOnPaste": true,
    "editor.codeActionsOnSave": {
        "source.addMissingImports.ts": "explicit",
        "source.fixAll.eslint": "explicit",
        "source.fixAll.pylance": "explicit",
        "source.fixAll.ruff": "explicit",
        "source.fixAll.shellcheck": "explicit",
        "source.fixAll.ts": "explicit",
        "source.formatAll.terraform": "explicit",
        "source.organizeImports": "explicit",
        "source.organizeImports.ruff": "explicit",
        "source.removeUnusedImports": "explicit"
    },
    "editor.detectIndentation": true,
    "editor.fontFamily": "CaskaydiaCove Nerd Font Mono, Menlo, Monaco, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.guides.bracketPairs": true,
    "editor.guides.indentation": true,
    "editor.inlayHints.enabled": "on",
    "editor.linkedEditing": true,
    "editor.minimap.renderCharacters": false,
    "editor.rulers": [100],
    "editor.stickyScroll.enabled": false,
    "editor.wordWrap": "off",
    "eslint.options": {
        "reportUnusedDisableDirectives": true
    },
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
        "*.tf": "*.${capture}.${extname}",
        "*.ts": "${basename}.*, ${basename}.test.${extname}"
    },
    "files.eol": "\n",
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "gitlens.advanced.messages": {
        "suppressCreatePullRequestPrompt": true
    },
    "gitlens.codeLens.scopes": ["document"],
    "gitlens.gitCommands.skipConfirmations": [
        "fetch:command",
        "stash-push:command",
        "switch:command",
        "branch-create:command"
    ],
    "gitlens.views.branches.branches.layout": "list",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "liveServer.settings.donotShowInfoMsg": true,
    "makefile.configureOnOpen": true,
    "prettier.printWidth": 100,
    "prettier.semi": true,
    "prettier.singleQuote": false,
    "prettier.tabWidth": 4,
    "prettier.trailingComma": "all",
    "projectManager.git.baseFolders": ["", "D:\\Desktop\\Stuff"],
    "projectManager.git.ignoredFolders": [
        "node_modules",
        "out",
        "typings",
        "test",
        ".haxelib",
        ".oh-my-zsh"
    ],
    "projectManager.sortList": "Recent",
    "pylint.args": ["--disable=C0114,C0103,C0116,W0603,C0301,W0719,C0115"],
    "python.analysis.autoFormatStrings": true,
    "python.analysis.autoImportCompletions": true,
    "python.analysis.completeFunctionParens": true,
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.pytestParameters": true,
    "python.analysis.inlayHints.variableTypes": true,
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.typeEvaluation.enableExperimentalFeatures": true,
    "python.analysis.typeEvaluation.enableReachabilityAnalysis": true,
    "python.analysis.typeEvaluation.strictDictionaryInference": true,
    "python.analysis.typeEvaluation.strictListInference": true,
    "python.analysis.typeEvaluation.strictSetInference": true,
    "redhat.telemetry.enabled": false,
    "telemetry.feedback.enabled": false,
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.suggest.enabled": true,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": false,
    "typescript.preferences.importModuleSpecifier": "project-relative",
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "typescript.preferences.organizeImports": {
        "caseSensitivity": "caseInsensitive"
    },
    "typescript.preferGoToSourceDefinition": true,
    "typescript.referencesCodeLens.enabled": true,
    "typescript.suggest.completeFunctionCalls": true,
    "typescript.tsserver.log": "off",
    "typescript.updateImportsOnFileMove.enabled": "always"
}
